# BLEM PV Service  

The BLEM PV Service populates and updates multiple PVs containing the BLEM R-Matrix and Twiss models. This service is run for multiple beampaths and types of models.  


## Directory Structure  
.  
|-- README  
|-- RELEASE_NOTES  
|-- blem_pv.sh  
|-- blem_pv.py  
|-- matlab_model_pvs.sh  
|-- matlab_model_pvs.py  
|-- blem_display.ui  
`-- blem_display.py  


## Deployment  
### Prod  
The MATLAB Model PV Host can be controled from the Watchers page:  
  lclshome --> Physics Apps --> GOTO Watcher... --> Group 1 --> MATLAB Model PV Host  

### Dev  
To launch the MATLAB Model PVs on Dev, log onto dev as laci:  
  [laci@lcls-dev3 ~]$ ssh laci@lcls-dev3  
Determine if there is an existing tmux, it should be called matlab_model_pvs:  
  [laci@lcls-dev3 ~]$ tmux ls  
  failed to connect to server  
Connect to the existing session or create a new one:  
  [laci@lcls-dev3 ~]$ tmux new -s matlab_model_pvs  
Open $TOOLS/script/BLEM_PV_Service and launch matlab_model_pvs.sh  
  [laci@lcls-dev3 ~]$ cd $TOOLS/script/BLEM_PV_Service  
  [laci@lcls-dev3 BLEM_PV_Service]$ ./matlab_model_pvs.sh  
  2024-06-20T14:37:34.393856617 WARN pvxs.tcp.setup Server unable to bind port 5075, falling back to [::]:34837  
Detach from the session:
  <Ctrl-B + D>  
  [detached]  
  [laci@lcls-dev3 ~]$  

### blem_pv.sh  
  - Sources the correct version of python  
    - The Matlab Engine for 2020a can only be run from Python3.7  
  - Periodically runs a python script for each PV to update the data  
  - There is a separate PV/python instance for each beampath and model type  
  - Beam Paths:  
    - CU_HXR  
    - CU_SXR  
    - SC_HXR  
    - SC_SXR  
    - SC_DIAG0  
    - SC_BSYD  
  - Model Types:  
    - LIVE  
    - DESIGN  


### blem_pv.py  
  - Parse Arguments  
  - Establish connection with PVA  
  - Create Matlab engine  
  - Create a dictionary of all element and device names  
  - Get the PV data from Matlab  
  - Write the data to the associated RMAT & TWISS PVs with PVA  
  - Write the timestamp to the associated RMAT_TOD & TWISS_TOD PVs with CA  
  - Write the processing count to the associated RMAT_CNT & TWISS_CNT PVs with CA  
  - Write the status to the associated STAT PVs with CA  


### matlab_model_pvs.sh  
  - Sources the correct Python environment  
  - Runs the matlab_model_pvs.py python code  


### matlab_model_pvs.py  
  - Uses the PVAccess For Python (p4p) library to host NTTable PVs used by the project  
  - Runs indefinitely  


### blem_display.py & blem_display.ui  
  - Allows the user to pick any PV to display info on  
  - Displays info on the process itself:  
    - When it was last updated and how many times it has updated  
    - The process's current status  
    - The process's error count  
  - Displays a table showing the Matlab Model data contained within the BLEM PVs  


### Authors

Zach Domke      zdomke@slac.stanford.edu  
